/**
 * Scubawhere API Documentation
 * This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bryan@scubawhere.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Country'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Country'));
  } else {
    // Browser globals (root is window)
    if (!root.ScubawhereApiDocumentation) {
      root.ScubawhereApiDocumentation = {};
    }
    root.ScubawhereApiDocumentation.Customer = factory(root.ScubawhereApiDocumentation.ApiClient, root.ScubawhereApiDocumentation.Country);
  }
}(this, function(ApiClient, Country) {
  'use strict';




  /**
   * The Customer model module.
   * @module model/Customer
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>Customer</code>.
   * @alias module:model/Customer
   * @class
   */
  var exports = function() {
    var _this = this;
























  };

  /**
   * Constructs a <code>Customer</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Customer} obj Optional instance to populate.
   * @return {module:model/Customer} The populated <code>Customer</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Integer');
      }
      if (data.hasOwnProperty('email')) {
        obj['email'] = ApiClient.convertToType(data['email'], 'String');
      }
      if (data.hasOwnProperty('firstname')) {
        obj['firstname'] = ApiClient.convertToType(data['firstname'], 'String');
      }
      if (data.hasOwnProperty('lastname')) {
        obj['lastname'] = ApiClient.convertToType(data['lastname'], 'String');
      }
      if (data.hasOwnProperty('verified')) {
        obj['verified'] = ApiClient.convertToType(data['verified'], 'Integer');
      }
      if (data.hasOwnProperty('birthday')) {
        obj['birthday'] = ApiClient.convertToType(data['birthday'], 'Date');
      }
      if (data.hasOwnProperty('gender')) {
        obj['gender'] = ApiClient.convertToType(data['gender'], 'Integer');
      }
      if (data.hasOwnProperty('address_1')) {
        obj['address_1'] = ApiClient.convertToType(data['address_1'], 'String');
      }
      if (data.hasOwnProperty('address_2')) {
        obj['address_2'] = ApiClient.convertToType(data['address_2'], 'String');
      }
      if (data.hasOwnProperty('city')) {
        obj['city'] = ApiClient.convertToType(data['city'], 'String');
      }
      if (data.hasOwnProperty('county')) {
        obj['county'] = ApiClient.convertToType(data['county'], 'String');
      }
      if (data.hasOwnProperty('postcode')) {
        obj['postcode'] = ApiClient.convertToType(data['postcode'], 'String');
      }
      if (data.hasOwnProperty('country_id')) {
        obj['country_id'] = ApiClient.convertToType(data['country_id'], 'Integer');
      }
      if (data.hasOwnProperty('phone')) {
        obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
      }
      if (data.hasOwnProperty('last_dive')) {
        obj['last_dive'] = ApiClient.convertToType(data['last_dive'], 'Date');
      }
      if (data.hasOwnProperty('number_of_dives')) {
        obj['number_of_dives'] = ApiClient.convertToType(data['number_of_dives'], 'Integer');
      }
      if (data.hasOwnProperty('chest_size')) {
        obj['chest_size'] = ApiClient.convertToType(data['chest_size'], 'String');
      }
      if (data.hasOwnProperty('shoe_size')) {
        obj['shoe_size'] = ApiClient.convertToType(data['shoe_size'], 'String');
      }
      if (data.hasOwnProperty('height')) {
        obj['height'] = ApiClient.convertToType(data['height'], 'String');
      }
      if (data.hasOwnProperty('cylinder_size')) {
        obj['cylinder_size'] = ApiClient.convertToType(data['cylinder_size'], 'String');
      }
      if (data.hasOwnProperty('notes')) {
        obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
      }
      if (data.hasOwnProperty('unsubscribed')) {
        obj['unsubscribed'] = ApiClient.convertToType(data['unsubscribed'], 'Boolean');
      }
      if (data.hasOwnProperty('country')) {
        obj['country'] = Country.constructFromObject(data['country']);
      }
    }
    return obj;
  }

  /**
   * @member {Integer} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} email
   */
  exports.prototype['email'] = undefined;
  /**
   * @member {String} firstname
   */
  exports.prototype['firstname'] = undefined;
  /**
   * @member {String} lastname
   */
  exports.prototype['lastname'] = undefined;
  /**
   * @member {Integer} verified
   */
  exports.prototype['verified'] = undefined;
  /**
   * @member {Date} birthday
   */
  exports.prototype['birthday'] = undefined;
  /**
   * @member {Integer} gender
   */
  exports.prototype['gender'] = undefined;
  /**
   * @member {String} address_1
   */
  exports.prototype['address_1'] = undefined;
  /**
   * @member {String} address_2
   */
  exports.prototype['address_2'] = undefined;
  /**
   * @member {String} city
   */
  exports.prototype['city'] = undefined;
  /**
   * @member {String} county
   */
  exports.prototype['county'] = undefined;
  /**
   * @member {String} postcode
   */
  exports.prototype['postcode'] = undefined;
  /**
   * @member {Integer} country_id
   */
  exports.prototype['country_id'] = undefined;
  /**
   * @member {String} phone
   */
  exports.prototype['phone'] = undefined;
  /**
   * @member {Date} last_dive
   */
  exports.prototype['last_dive'] = undefined;
  /**
   * @member {Integer} number_of_dives
   */
  exports.prototype['number_of_dives'] = undefined;
  /**
   * @member {String} chest_size
   */
  exports.prototype['chest_size'] = undefined;
  /**
   * @member {String} shoe_size
   */
  exports.prototype['shoe_size'] = undefined;
  /**
   * @member {String} height
   */
  exports.prototype['height'] = undefined;
  /**
   * @member {String} cylinder_size
   */
  exports.prototype['cylinder_size'] = undefined;
  /**
   * @member {String} notes
   */
  exports.prototype['notes'] = undefined;
  /**
   * @member {Boolean} unsubscribed
   */
  exports.prototype['unsubscribed'] = undefined;
  /**
   * @member {module:model/Country} country
   */
  exports.prototype['country'] = undefined;



  return exports;
}));


