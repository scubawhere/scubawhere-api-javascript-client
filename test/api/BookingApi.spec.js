/**
 * Scubawhere API Documentation
 * This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bryan@scubawhere.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ScubawhereApiDocumentation);
  }
}(this, function(expect, ScubawhereApiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ScubawhereApiDocumentation.BookingApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BookingApi', function() {
    describe('addBookingDetail', function() {
      it('should call addBookingDetail successfully', function(done) {
        //uncomment below and update the code to test addBookingDetail
        //instance.addBookingDetail(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attachAccommodation', function() {
      it('should call attachAccommodation successfully', function(done) {
        //uncomment below and update the code to test attachAccommodation
        //instance.attachAccommodation(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attachAddon', function() {
      it('should call attachAddon successfully', function(done) {
        //uncomment below and update the code to test attachAddon
        //instance.attachAddon(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attachPickup', function() {
      it('should call attachPickup successfully', function(done) {
        //uncomment below and update the code to test attachPickup
        //instance.attachPickup(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cancelBooking', function() {
      it('should call cancelBooking successfully', function(done) {
        //uncomment below and update the code to test cancelBooking
        //instance.cancelBooking(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('confirmBooking', function() {
      it('should call confirmBooking successfully', function(done) {
        //uncomment below and update the code to test confirmBooking
        //instance.confirmBooking(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBooking', function() {
      it('should call deleteBooking successfully', function(done) {
        //uncomment below and update the code to test deleteBooking
        //instance.deleteBooking(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dettachAccommodation', function() {
      it('should call dettachAccommodation successfully', function(done) {
        //uncomment below and update the code to test dettachAccommodation
        //instance.dettachAccommodation(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dettachAddon', function() {
      it('should call dettachAddon successfully', function(done) {
        //uncomment below and update the code to test dettachAddon
        //instance.dettachAddon(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dettachPickup', function() {
      it('should call dettachPickup successfully', function(done) {
        //uncomment below and update the code to test dettachPickup
        //instance.dettachPickup(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editBookingInfo', function() {
      it('should call editBookingInfo successfully', function(done) {
        //uncomment below and update the code to test editBookingInfo
        //instance.editBookingInfo(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('filterBookings', function() {
      it('should call filterBookings successfully', function(done) {
        //uncomment below and update the code to test filterBookings
        //instance.filterBookings(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllBookings', function() {
      it('should call getAllBookings successfully', function(done) {
        //uncomment below and update the code to test getAllBookings
        //instance.getAllBookings(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllWithTrashedBookings', function() {
      it('should call getAllWithTrashedBookings successfully', function(done) {
        //uncomment below and update the code to test getAllWithTrashedBookings
        //instance.getAllWithTrashedBookings(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBooking', function() {
      it('should call getBooking successfully', function(done) {
        //uncomment below and update the code to test getBooking
        //instance.getBooking(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCustomerBookings', function() {
      it('should call getCustomerBookings successfully', function(done) {
        //uncomment below and update the code to test getCustomerBookings
        //instance.getCustomerBookings(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPayments', function() {
      it('should call getPayments successfully', function(done) {
        //uncomment below and update the code to test getPayments
        //instance.getPayments(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRefunds', function() {
      it('should call getRefunds successfully', function(done) {
        //uncomment below and update the code to test getRefunds
        //instance.getRefunds(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTodaysBookings', function() {
      it('should call getTodaysBookings successfully', function(done) {
        //uncomment below and update the code to test getTodaysBookings
        //instance.getTodaysBookings(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTommorowsBookings', function() {
      it('should call getTommorowsBookings successfully', function(done) {
        //uncomment below and update the code to test getTommorowsBookings
        //instance.getTommorowsBookings(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('initBooking', function() {
      it('should call initBooking successfully', function(done) {
        //uncomment below and update the code to test initBooking
        //instance.initBooking(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeBookingDetail', function() {
      it('should call removeBookingDetail successfully', function(done) {
        //uncomment below and update the code to test removeBookingDetail
        //instance.removeBookingDetail(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resendConfirmation', function() {
      it('should call resendConfirmation successfully', function(done) {
        //uncomment below and update the code to test resendConfirmation
        //instance.resendConfirmation(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reserveBooking', function() {
      it('should call reserveBooking successfully', function(done) {
        //uncomment below and update the code to test reserveBooking
        //instance.reserveBooking(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('saveBooking', function() {
      it('should call saveBooking successfully', function(done) {
        //uncomment below and update the code to test saveBooking
        //instance.saveBooking(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setLeadCustomer', function() {
      it('should call setLeadCustomer successfully', function(done) {
        //uncomment below and update the code to test setLeadCustomer
        //instance.setLeadCustomer(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
